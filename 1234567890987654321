https://shelepovko.notion.site/3457fe6ba9b54a009dba0b5b785e81e9?pvs=4


ISP
hostnamectl set-hostname isp
nano /etc/net/sysctl.conf 
net.ipv4.ip_forward = 1
cd /etc/net/ifaces
cp -r ens18/ ens19
vim ens19/options
BOOTPROTO=static
cp -r ens19/ ens20
cp -r ens19/ ens21
vim ens19/ipv4address
100.100.100.1/28
vim ens19/ipv4route
10.10.10.0/24 via 100.100.100.10
vim ens20/ipv4address
150.150.150.1/28
vim ens20/ipv4route
20.20.20.0/24 via 150.150.150.10
vim ens21/ipv4address
35.35.35.1/28
systemctl restart network
reboot
apt-get update && apt-get install nftables chrony -y
vim /etc/nftables/nftables.nft
в начало:
flush ruleset;
в конец:
table ip nat {
  chain postrouting {
     type nat hook postrouting priority 0;
     oifname ens18 masquerade;
  }
}
Вот так:


systemctl enable --now nftables
nft -f /etc/nftables/nftables.nft

CLI
hostnamectl set-hostname cli
cd /etc/net/ifaces
cp -r ens18/ ens19
vim ens19/options
BOOTPROTO=static
vim ens19/ipv4address
35.35.35.10/28
vim ens19/ipv4route
default via 35.35.35.1
systemctl restart network
reboot
apt-get update && apt-get install chrony yandex-browser -y

RTR-L
hostnamectl set-hostname rtr-l
vim /etc/net/sysctl.conf 
net.ipv4.ip_forward = 1
cd /etc/net/ifaces
vim ens18/options
BOOTPROTO=static
cp -r ens18/ ens19
vim ens18/ipv4address
100.100.100.10/28
vim ens18/ipv4route
default via 100.100.100.1
vim ens19/ipv4address
10.10.10.1/24
systemctl restart network
reboot
apt-get update && apt-get install nftables chrony strongswan -y
vim /etc/nftables/nftables.nft
в начало:
flush ruleset;
в конец:
table ip nat {
  chain postrouting {
     type nat hook postrouting priority 0;
     ip saddr 10.10.10.0/24 oifname ens18 masquerade;
  }
  chain prerouting {
     type nat hook prerouting priority 0;
     tcp dport 2024 dnat to 10.10.10.110:2024;
  }
}
systemctl enable --now nftables
nft -f /etc/nftables/nftables.nft

RTR-R
hostnamectl set-hostname rtr-r
vim /etc/net/sysctl.conf 
net.ipv4.ip_forward = 1
cd /etc/net/ifaces
vim ens18/options
BOOTPROTO=static
cp -r ens18/ ens19
vim ens18/ipv4address
150.150.150.10/28
vim ens18/ipv4route
default via 150.150.150.1
vim ens19/ipv4address
20.20.20.1/24
systemctl restart network
reboot
apt-get update && apt-get install chrony nftables strongswan -y
vim /etc/nftables/nftables.nft
в начало:
flush ruleset;
в конец:
table ip nat {
  chain postrouting {
     type nat hook postrouting priority 0;
     ip saddr 20.20.20.0/24 oifname ens18 masquerade;
  }
  chain prerouting {
     type nat hook prerouting priority 0;
     tcp dport 2024 dnat to 20.20.20.100:2024;
  }
}
systemctl enable --now nftables
nft -f /etc/nftables/nftables.nft

WEB-L
hostnamectl set-hostname web-l
cd /etc/net/ifaces/ens18/
vim options
BOOTPROTO=static
vim ipv4address
10.10.10.110/24
vim ipv4route
default via 10.10.10.1
systemctl restart network
reboot
apt-get update && apt-get install chrony docker-io docker-compose nfs-clients -y

WEB-R
hostnamectl set-hostname web-r
cd /etc/net/ifaces/ens18/
vim options
BOOTPROTO=static
vim ipv4address
20.20.20.100/24
vim ipv4route
default via 20.20.20.1
systemctl restart network
reboot
apt-get update && apt-get install chrony bind bind-utils nfs-clients -y

SRV-L
hostnamectl set-hostname srv-l
cd /etc/net/ifaces/ens18/
vim options
BOOTPROTO=static
vim ipv4address
10.10.10.100/24
vim ipv4route
default via 10.10.10.1
systemctl restart network
reboot
apt-get update && apt-get install chrony bind bind-utils nfs-server -y

3.
RTR-L
vim /etc/gre.up
#!/bin/bash
ip tunnel add tun0 mode gre local 100.100.100.10 remote 150.150.150.10
ip addr add 10.5.5.1/30 dev tun0
ip link set up tun0
ip route add 20.20.20.0/24  via 10.5.5.2
chmod +x /etc/gre.up
/etc/gre.up
vim /etc/crontab
в конец добавляем:
@reboot root /etc/gre.up
vim /etc/strongswan/ipsec.conf
ниже “config setup” пишем:
conn vpn
(следующие строки через tab)
                  auto=start
                  type=tunnel
                  authby=secret
                  left=100.100.100.10
                  right=150.150.150.10
                  leftsubnet=0.0.0.0/0
                  rightsubnet=0.0.0.0/0
                  leftprotoport=gre
                  rightprotoport=gre
                  ike=aes128-sha256-modp3072
                  esp=aes128-sha256

vim /etc/strongswan/ipsec.secrets
100.100.100.10 150.150.150.10 : PSK “P@ssw0rd”
systemctl enable --now ipsec.service

RTR-R
vim /etc/gre.up
#!/bin/bash
ip tunnel add tun0 mode gre local 150.150.150.10 remote 100.100.100.10
ip addr add 10.5.5.2/30 dev tun0
ip link set up tun0
ip route add 10.10.10.0/24  via 10.5.5.1
chmod +x /etc/gre.up
/etc/gre.up
vim /etc/crontab
в конец добавляем:
@reboot root /etc/gre.up
vim /etc/strongswan/ipsec.conf
ниже “config setup” пишем:
conn vpn
(следующие строки через tab)
                  auto=start
                  type=tunnel
                  authby=secret
                  left=150.150.150.10
                  right=100.100.100.10
                  leftsubnet=0.0.0.0/0
                  rightsubnet=0.0.0.0/0
                  leftprotoport=gre
                  rightprotoport=gre
                  ike=aes128-sha256-modp3072
                  esp=aes128-sha256

vim /etc/strongswan/ipsec.secrets
100.100.100.10 150.150.150.10 : PSK “P@ssw0rd”
systemctl enable --now ipsec.service

Задание 4: настройка ssh на WEB-L и WEB-R

WEB-L
vim /etc/openssh/banner.txt
Authorized access only
vim /etc/openssh/sshd_config
расскоментируем строчку Port 22
пишем вместо 22 порт 2024
расскоментируем строчку MaxAuthTries 6
пишем вместо 6 попыток 2
расскоментируем строчку Banner none
вместо none пишем путь к banner.txt /etc/openssh/banner.txt
добавляем в конец
AllowUsers sshuser
adduser sshuser
passwd sshuser
P@ssw0rd два раза
systemctl restart sshd

WEB-R
vim /etc/openssh/banner.txt
Authorized access only
vim /etc/openssh/sshd_config
расскоментируем строчку Port 22
пишем вместо 22 порт 2024
расскоментируем строчку MaxAuthTries 6
пишем вместо 6 попыток 2
расскоментируем строчку Banner none
вместо none пишем путь к banner.txt /etc/openssh/banner.txt
добавляем в конец
AllowUsers sshuser
adduser sshuser
passwd sshuser
P@ssw0rd два раза
systemctl restart sshd

Задание 5: DNS


SRV-L
systemctl enable --now bind

vim /etc/bind/options.conf

что должно быть в options:

(таб)listen-on { any; };
forwarders { 94.232.137.104; };
dnssec-validation no;
recursion yes;
allow-query { any; };
allow-recursion { any; };

vim /etc/bind/local.conf

добавляем после слов Add other zones here:
zone "au.team" {
                type master;
                file "au.team";
                allow-transfer {20.20.20.100;};
};
zone "10.10.10.in-addr.arpa" {
                type master;
                file "left.reverse";
                allow-transfer {20.20.20.100;};
};
zone "20.20.20.in-addr.arpa" {
                type master;
                file "right.reverse";
                allow-transfer {20.20.20.100;};
};
zone "35.35.35.in-addr.arpa" {
                type master;
                file "cli.reverse";
                allow-transfer {20.20.20.100;};
};

cd /etc/bind/zone/
cp localhost au.team
vim au.team
заменяем localhost. на au.team.  и root.localhost. на root.au.team.
@INNSau.team.  (3 таба)
@INA10.10.10.100
ispINA100.100.100.1
rtr-lINA10.10.10.1
rtr-rINA20.20.20.1
web-lINA10.10.10.110
web-rINA20.20.20.100
srv-lINA10.10.10.100
cliINA35.35.35.10
dnsINCNAMEsrv-l
ntpINCNAMEisp
mediawikiINCNAMEweb-l

cp localhost right.reverse

vim right.reverse

заменяем localhost. на 20.20.20.in-addr.arpa. и
root.localhost. на root.20.20.20.in-addr.arpa.

@INNSau.team. (3 таба)
@INA20.20.20.100
1 PTR rtr-r.au.team. (2 таба)
100PTRweb-r.au.team.

cp right.reverse left.reverse
vim left.reverse

@INNSau.team. (3 таба)
@INA10.10.10.100
1PTRrtr-l.au.team. (2 таба)
100PTRsrv-l.au.team.
110PTRweb-l.au.team.

cp right.reverse cli.reverse
vim cli.reverse
заменяем 10.10.10.in-addr.arpa. на 35.35.35.in-addr.arpa.
и root.10.10.10.in-addr.arpa. на root.35.35.35.in-addr.arpa.

@INNSau.team.
@INA35.35.35.1
1PTRisp.au.team. (2 таба)
10PTRcli.au.team.

chmod 777 au.team
chmod 777 right.reverse
chmod 777 left.reverse
chmod 777 cli.reverse
systemctl restart bind

vim /etc/resolv.conf
должен быть указан только один nameserver 127.0.0.1 (в самом конце)


WEB-R

systemctl enable --now bind
vim /etc/bind/options.conf
что должно быть в options:
(таб)listen-on { any; };
forwarders { 10.10.10.100; };
dnssec-validation no;
recursion yes;
allow-query { any; };
allow-recursion { any; };

vim /etc/bind/local.conf

добавляем после слов Add other zones here:
zone "au.team" {
(таб)type slave;
file "slave/au.team";
masters {10.10.10.100;};
};
zone "10.10.10.in-addr.arpa" {
type slave;
file "slave/left.reverse";
masters {10.10.10.100;};
};
zone "20.20.20.in-addr.arpa" {
type slave;
file "slave/right.reverse";
masters {10.10.10.100;};
};
zone "35.35.35.in-addr.arpa" {
type slave;
file "slave/cli.reverse";
masters {10.10.10.100;};
};

chown named:named /var/lib/bind/zone/slave/
chown named:named /etc/bind/zone/slave/
systemctl restart bind
vim /etc/resolv.conf
должен быть указан только один nameserver 127.0.0.1 в самом конце

CLI 
vim /etc/resolv.conf
должен быть указан только один nameserver 10.10.10.100

ISP
vim /etc/resolv.conf
должен быть указан только один nameserver 10.10.10.100

RTR-L
vim /etc/resolv.conf
должен быть указан только один nameserver 10.10.10.100

RTR-R
vim /etc/resolv.conf
должен быть указан только один nameserver 20.20.20.100 (если WEB-R не работает, то 10.10.10.100)

WEB-L
vim /etc/resolv.conf
должен быть указан только один nameserver 10.10.10.100


6 задание
ISP
vim /etc/chrony.conf
в конец пишем:
server 127.0.0.1
allow 100.100.100.0/28
allow 150.150.150.0/28
allow 35.35.35.0/28
allow 10.10.10.0/24
allow 20.20.20.0/24
local stratum 5
systemctl restart chronyd

CLI
vim /etc/chrony.conf
комментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 35.35.35.1 iburst
systemctl restart chronyd

- RTR-L
vim /etc/chrony.conf
kомментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 100.100.100.1 iburst
systemctl restart chronyd

- RTR-R
vim /etc/chrony.conf
комментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 150.150.150.1 iburst
systemctl restart chronyd

- WEB-R
vim /etc/chrony.conf
комментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 150.150.150.1 iburst
systemctl restart chronyd

- WEB-L
vim /etc/chrony.conf
комментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 100.100.100.1 iburst
systemctl restart chronyd

- SRV-L
vim /etc/chrony.conf
комментируем (пишем #) перед “pool pool.ntp.org iburst”
в конец пишем:
server 100.100.100.1 iburst
systemctl restart chronyd


9
- CLI
apt-get install yandex-browser -y
запустить НЕ от рута с помощью команды:
yandex-browser-stable
запустить от рута с помощью команды:
yandex-browser-stable --no-sandbox



Если DNS сервер не работает, systemctl status bind выдает ошибки, надо systemctl restart bind на DNS сервере
Для проверки chrony используем на ISP : chronyc clients,а на всех остальных cronyc sources
Для проверки ssh используем : ssh -p sshuser@10.10.10.110
Если вообще никак не пингуется то добавить nameserver ya.ru(но это в ПАТОВОЙ ситуации)


монтирование 
https://shelepovko.notion.site/3457fe6ba9b54a009dba0b5b785e81e9?pvs=4

https://vk.com/doc174502290_681845244?hash=q756y9fnGePhrOojXtxKcKgc1qp7ojr1MYMzj9qU96c&dl=EfSNqgkZXmLoB2FDmgDM2yp3DVk5UWv64I8m4dXaS0D



